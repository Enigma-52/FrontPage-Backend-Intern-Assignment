version: '3.8'

services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: scraper_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: app_user
      PMA_PASSWORD: app_pass
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  scraper:
    build:
      context: ./services/scraper-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - MYSQL_HOST=mysql
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=app_pass
      - MYSQL_DATABASE=scraper_db
      - SCRAPE_INTERVAL=300000
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MYSQL_HOST=mysql
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=app_pass
      - MYSQL_DATABASE=scraper_db
      - WEBSOCKET_URL=ws://websocket:8000
      - WEBSOCKET_PROTOCOL=ws
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app_network

  websocket:
    build:
      context: ./services/websocket-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - PORT=8000
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network
  
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "8081:80" 
    depends_on:
      - api-gateway
      - websocket
    networks:
      - app_network

volumes:
  mysql_data:

networks:
  app_network:
    name: app_network